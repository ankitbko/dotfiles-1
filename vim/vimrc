" Include default global config
source /etc/vimrc

" Start pathogen
" "https://github.com/tpope/vim-pathogen"
execute pathogen#infect()

" Default options
" "https://wiki.archlinux.org/index.php/vim/.vimrc"
colorscheme gruvbox
" colorscheme solarized
" colorscheme molokai
" let g:molokai_original = 1
" let g:rehash256 = 1

syntax on
filetype plugin indent on

" set textwidth=79
set autoindent
set background=dark
set backspace=2
set colorcolumn=+1        " highlight column after 'textwidth'
set expandtab
set hlsearch
set ignorecase
set incsearch
set list
set listchars=eol:¬,tab:>-,trail:•,extends:>,precedes:<
set mouse=a
set number
set nocompatible
set relativenumber
set ruler
set shiftwidth=4
set showcmd
set showmatch
set smartcase
set smarttab
set tabstop=4

" Leader (space) mappings:
" So much thanks to Steve Losh's "Learn Vimscript the Hard Way"
" "http://learnvimscriptthehardway.stevelosh.com/chapters/06.html"
" "http://learnvimscriptthehardway.stevelosh.com/chapters/07.html"

" Space leader
nnoremap <space> <nop>
let mapleader=" "

nnoremap <leader>l >>
nnoremap <leader>h <<

" ev - _E_dit _V_im config
nnoremap <leader>ev :vsplit $MYVIMRC<cr>

" sv - _S_ource _V_im config
nnoremap <leader>sv :source $MYVIMRC<cr>

" p - Duplicate line
nnoremap <leader>p yyp

" gst - Open Git status
nnoremap <leader>gst :Gstatus<cr>

" gco - Open Git commit
nnoremap <leader>gco :Gcommit<cr>

" c - _C_lear the current search
nnoremap <leader>cl :noh<cr>

" sp - _SP_elling fix with first result
nnoremap <leader>sp z=1<cr><cr>

" Custom Selectors
" More thanks to Steve Losh's "Learn Vimscript the Hard Way"
" "http://learnvimscriptthehardway.stevelosh.com/chapters/15.html"

" Inside _P_arentheses
onoremap p i(

" Inside curly breaces
onoremap o i{

" In Insert mode jk or kj escape to Normal mode
inoremap jk <esc>
inoremap kj <esc>

" Insert mode jj moves left, kk moves right
inoremap jj <esc>i
inoremap kk <esc>lli

" Begin LaTeX
autocmd BufNewFile,BufRead *.tex :set filetype=tex
autocmd BufNewFile,BufRead *.tex :set spell

" il - _I_tem _L_ist
autocmd BufNewFile,BufRead *.tex :nnoremap <leader>il o\begin{itemize}<cr>\item <cr>\end{itemize}<esc>kA

" el - _E_numerated _L_ist
autocmd BufNewFile,BufRead *.tex :nnoremap <leader>el o\begin{enumerate}<cr>\item <cr>\end{enumerate}<esc>kA

" vb - _V_er_B_atim
autocmd BufNewFile,BufRead *.tex :nnoremap <leader>vb o\begin{verbatim}<cr><cr>\end{verbatim}<esc>kA

" li - _L_ist _I_tem
" NOTE: trailing whitespace is intentional
autocmd BufNewFile,BufRead *.tex :nnoremap <leader>li o\item 

" s - _S_ection
autocmd BufNewFile,BufRead *.tex :nnoremap <leader>s o\section{}<esc>i

" ss - _S_ub _S_ection
autocmd BufNewFile,BufRead *.tex :nnoremap <leader>ss o\subsection{}<esc>i

" sss - _S_ub _S_ub _S_ection
autocmd BufNewFile,BufRead *.tex :nnoremap <leader>sss o\subsubsection{}<esc>i

" bf - _B_old _F_ont (Normal and Insert mode)
autocmd BufNewFile,BufRead *.tex :nnoremap <leader>bf i\textbf{<esc>Eli}<esc>
autocmd BufNewFile,BufRead *.tex :inoremap bf \textbf{

" it - _I_talicize _F_ont (Normal and Insert mode)
autocmd BufNewFile,BufRead *.tex :nnoremap <leader>it i\textit{<esc>Eli}<esc>
autocmd BufNewFile,BufRead *.tex :inoremap ii \textit{
" End LaTeX

" Airline options
" "https://github.com/bling/vim-airline"
let g:airline_powerline_fonts = 1
set encoding=utf-8
set laststatus=2

" NERDTree Options
" Start if no file opened
"autocmd vimenter * if !argc() | NERDTree | endif
" Assign command to TAB
"map <TAB> :NERDTreeToggle<CR>
" Fix encoding issues surrounding arrows
" "https://superuser.com/questions/387777/what-could-cause-strange-characters-in-vim"
let g:NERDTreeDirArrows=0

" Taglist toggle
:nnoremap <Leader>t :Tlist<CR>

" Taglist latex support
" "https://caffeinatedcode.wordpress.com/2009/11/16/simple-latex-ctags-and-taglist/"
let tlist_tex_settings = 'latex;l:labels;s:sections;t:subsections;u:subsubsections'

" Trailing whitespace highlighting
" "http://vim.wikia.com/wiki/Highlight_unwanted_spaces"
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" Auto enable rainbow parentheses
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]
let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0

" JFLex support
augroup filetype
    au BufRead,BufNewFile *.flex,*.jflex,*.jlex    set filetype=jflex
augroup END
    au Syntax jflex    so ~/.vim/syntax/jflex.vimrc

" Java Cup support
autocmd BufNewFile,BufRead *.cup setf cup

" "https://github.com/vim-scripts/vim-auto-save"
" Enable auto saving at startup (can use :AutoSaveToggle otherwise)
let g:auto_save = 1
"
" Don't save while in insert mode
let g:auto_save_in_insert_mode = 0
" vim-auto-save config
"
" This plugin changes vim's updatetime option.
" If it breaks things, uncomment this
"let g:auto_save_no_updatetime = 1

" Set up crosshair, toggle with <leader>c in normal mode
:hi CursorLine cterm=NONE ctermbg=darkgrey ctermfg=white guibg=darkgrey guifg=white
:hi CursorColumn cterm=NONE ctermbg=darkgrey ctermfg=white guibg=darkgrey guifg=white
:nnoremap <Leader>c :set cursorline! cursorcolumn!<CR>

" Setting compiler for Ruby
" "https://github.com/vim-ruby/vim-ruby/wiki/VimRubySupport"
autocmd FileType ruby compiler ruby
au FileType ruby setl sw=2 ts=2 sts=2 et

" Set YAML to correct indentation
au FileType yaml setl sw=2 ts=2 sts=2 et

" Moving lines up and down with the arrow keys. As inspired by June 15' SF Vim
" meetup and "http://codingfearlessly.com/2012/08/21/vim-putting-arrows-to-use/"
nmap <Up> [e
nmap <Down> ]e
vmap <Up> [egv
vmap <Down> ]egv

" Gundo config "http://sjl.bitbucket.org/gundo.vim/"
nnoremap <TAB> :GundoToggle<CR>

" Ctrlp options
let g:ctrlp_working_path_mode = 'ca'
